devtools::load_all("/Users/nicholeyang/Desktop/udr")
set.seed(3)
n = 20
R = 5
K = 2
Ut = c()
for (k in 1:K){
Ut[[k]] <- udr:::sim_unconstrained(R)
}
Vt = diag(R)
wt = rep(1/K, K)
# Simulate data
X <- simulate_ud_data(n,wt,Ut,Vt)
X = as.matrix(X)
set.seed(999)
U.init = c()
for (i in 1:K)
U.init[[i]] = udr:::sim_unconstrained(R)
tol = 1e-5
tol.lik = 1e-5
f0 <- ud_init(X, V = Vt, n_rank1 = 0, U_scaled = NULL, U_unconstrained = U.init)
ted.reg = ud_fit(f0, control = list(unconstrained.update = "ted", scaled.update = "fa", resid.update = 'none', lambda =0.1, penalty.type = "nu", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
plot(ted.reg$progress$loglik.pen)
set.seed(5)
n = 50
R = 10
K = 5
Ut = c()
for (k in 1:K){
Ut[[k]] <- sim_unconstrained(R)
}
Vt = diag(R)
wt = rep(1/K, K)
# Simulate data
X <- simulate_ud_data(n,wt,Ut,Vt)
set.seed(999)
U.init = c()
for (i in 1:K)
U.init[[i]] = udr:::sim_unconstrained(R)
f0 <- ud_init(X, V = Vt, n_rank1 = 0, U_scaled = NULL, U_unconstrained = U.init)
ted.nu = ud_fit(f0, control = list(unconstrained.update = "ted", scaled.update = "fa", resid.update = 'none', lambda =0.1, penalty.type = "nu", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
plot(ted.reg$progress$loglik.pen)
set.seed(5)
n = 50
R = 10
K = 5
Ut = c()
for (k in 1:K){
Ut[[k]] <- sim_unconstrained(R)
}
Vt = diag(R)
wt = rep(1/K, K)
# Simulate data
X <- simulate_ud_data(n,wt,Ut,Vt)
set.seed(999)
U.init = c()
for (i in 1:K)
U.init[[i]] = udr:::sim_unconstrained(R)
f0 <- ud_init(X, V = Vt, n_rank1 = 0, U_scaled = NULL, U_unconstrained = U.init)
ted.iw = ud_fit(f0, control = list(unconstrained.update = "ted", scaled.update = "fa", resid.update = 'none', lambda =0.5*R, penalty.type = "iw", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
plot(ted.iw$progress$loglik.pen)
set.seed(1)
n = 50
R = 10
K = 2
n0 = 2
S0 = diag(R)
Ut = c()
for (k in 1:K){
Ut[[k]] <- sim_unconstrained(R)
}
Vt = diag(R)
wt = rep(1/K, K)
# Simulate data
X <- simulate_ud_data(n,wt,Ut,Vt)
set.seed(999)
U.init = c()
for (i in 1:K)
U.init[[i]] = udr:::sim_unconstrained(R)
f0 <- ud_init(X, V = Vt, n_rank1 = 0, U_scaled = NULL, U_unconstrained = U.init)
f0 <- ud_init(X, V = Vt, n_rank1 = 0, U_scaled = NULL, U_unconstrained = U.init)
ed.iw = ud_fit(f0, control = list(unconstrained.update = "ed", scaled.update = "fa", resid.update = 'none', lambda =2, penalty.type = "iw", maxiter=500, tol = 1e-3, tol.lik = 1e-3), verbose=TRUE)
plot(ed.reg$progress$loglik.pen)
plot(ed.iw$progress$loglik.pen)
devtools::load_all("/Users/nicholeyang/Desktop/udr")
set.seed(3)
n = 20
R = 5
K = 2
Ut = c()
for (k in 1:K){
Ut[[k]] <- udr:::sim_unconstrained(R)
}
Vt = diag(R)
wt = rep(1/K, K)
# Simulate data
X <- simulate_ud_data(n,wt,Ut,Vt)
X = as.matrix(X)
set.seed(3)
n = 20
R = 5
K = 2
Ut = c()
for (k in 1:K){
Ut[[k]] <- udr:::sim_unconstrained(R)
}
Vt = diag(R)
wt = rep(1/K, K)
# Simulate data
X <- simulate_ud_data(n,wt,Ut,Vt)
X = as.matrix(X)
set.seed(999)
U.init = c()
for (i in 1:K)
U.init[[i]] = udr:::sim_unconstrained(R)
tol = 1e-5
tol.lik = 1e-5
f0 <- ud_init(X, V = Vt, n_rank1 = 0, U_scaled = NULL, U_unconstrained = U.init)
ted.nu = ud_fit(f0, control = list(unconstrained.update = "ted", scaled.update = "fa", resid.update = 'none', lambda =0.1, penalty.type = "nu", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
ted.iw = ud_fit(f0, control = list(unconstrained.update = "ted", scaled.update = "fa", resid.update = 'none', lambda =0.1, penalty.type = "iw", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
devtools::load_all("/Users/nicholeyang/Desktop/udr")
set.seed(3)
n = 20
R = 5
K = 2
Ut = c()
for (k in 1:K){
Ut[[k]] <- udr:::sim_unconstrained(R)
}
Vt = diag(R)
wt = rep(1/K, K)
# Simulate data
X <- simulate_ud_data(n,wt,Ut,Vt)
X = as.matrix(X)
set.seed(999)
U.init = c()
for (i in 1:K)
U.init[[i]] = udr:::sim_unconstrained(R)
tol = 1e-5
tol.lik = 1e-5
f0 <- ud_init(X, V = Vt, n_rank1 = 0, U_scaled = NULL, U_unconstrained = U.init)
ted.nu = ud_fit(f0, control = list(unconstrained.update = "ted", scaled.update = "fa", resid.update = 'none', lambda =0.1, penalty.type = "nu", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
ted.iw = ud_fit(f0, control = list(unconstrained.update = "ted", scaled.update = "fa", resid.update = 'none', lambda =0.1, penalty.type = "iw", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
ed.iw = ud_fit(f0, control = list(unconstrained.update = "ed", scaled.update = "fa", resid.update = 'none', lambda =2, penalty.type = "iw", maxiter=500, tol = 1e-3, tol.lik = 1e-3), verbose=TRUE)
plot(ted.nu$progress$loglik.pen)
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
ted.iw$progress$loglik.pen
ed.iw$progress$loglik.pen
plot(ted.nu$progress$loglik.pen)
points(ted.iw$progress$loglik.pen, col = 2, ylim = c(-206, -180))
points(ed.iw$progress$loglik.pen, col = 3)
plot(ted.nu$progress$loglik.pen, ylim = c(-206, -180))
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
ted.iw$progress$loglik.pen
ed.iw$progress$loglik.pen
plot(ted.nu$progress$loglik.pen, ylim = c(-206, -180), xlim = c(0, 30))
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
plot(ted.nu$progress$loglik.pen, ylim = c(-206, -180), xlim = c(0, 28))
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
plot(ted.nu$progress$loglik.pen, ylim = c(-206, -180), xlim = c(0, 28), ylab = "loglik.pen")
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
plot(ted.nu$progress$loglik.pen, ylim = c(-206, -180), xlim = c(0, 28), ylab = "loglik.pen")
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
legends("topright", legends = c("ted.nu", "ted.iw", "ed.iw"), col = c(1:3), pch = 1)
plot(ted.nu$progress$loglik.pen, ylim = c(-206, -180), xlim = c(0, 28), ylab = "loglik.pen")
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
legend("topright", legend = c("ted.nu", "ted.iw", "ed.iw"), col = c(1:3), pch = 1)
devtools::load_all("/Users/nicholeyang/Desktop/udr")
set.seed(3)
n = 20
R = 5
K = 2
Ut = c()
for (k in 1:K){
Ut[[k]] <- udr:::sim_unconstrained(R)
}
Vt = diag(R)
wt = rep(1/K, K)
# Simulate data
X <- simulate_ud_data(n,wt,Ut,Vt)
X = as.matrix(X)
set.seed(999)
U.init = c()
for (i in 1:K)
U.init[[i]] = udr:::sim_unconstrained(R)
tol = 1e-2
tol.lik = 1e-2
lambda = 1
f0 <- ud_init(X, V = Vt, n_rank1 = 0, U_scaled = NULL, U_unconstrained = U.init)
ted.nu = ud_fit(f0, control = list(unconstrained.update = "ted", scaled.update = "fa", resid.update = 'none', lambda =lambda, penalty.type = "nu", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
ted.iw = ud_fit(f0, control = list(unconstrained.update = "ted", scaled.update = "fa", resid.update = 'none', lambda =lambda, penalty.type = "iw", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
ed.iw = ud_fit(f0, control = list(unconstrained.update = "ed", scaled.update = "fa", resid.update = 'none', lambda =lambda, penalty.type = "iw", maxiter=500, tol = tol, tol.lik = tol.lik), verbose=TRUE)
plot(ted.nu$progress$loglik.pen, ylim = c(-206, -180), xlim = c(0, 28), ylab = "loglik.pen")
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
legend("topright", legend = c("ted.nu", "ted.iw", "ed.iw"), col = c(1:3), pch = 1)
plot(ted.nu$progress$loglik.pen, ylim = c(-200, -185), xlim = c(0, 20), ylab = "loglik.pen")
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
legend("topright", legend = c("ted.nu", "ted.iw", "ed.iw"), col = c(1:3), pch = 1)
plot(ted.nu$progress$loglik.pen, ylim = c(-200, -187), xlim = c(0, 20), ylab = "loglik.pen")
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
legend("topright", legend = c("ted.nu", "ted.iw", "ed.iw"), col = c(1:3), pch = 1)
plot(ted.nu$progress$loglik.pen, ylim = c(-200, -188), xlim = c(0, 20), ylab = "loglik.pen")
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
legend("topright", legend = c("ted.nu", "ted.iw", "ed.iw"), col = c(1:3), pch = 1)
plot(ted.nu$progress$loglik.pen, ylim = c(-200, -186), xlim = c(0, 20), ylab = "loglik.pen")
points(ted.iw$progress$loglik.pen, col = 2)
points(ed.iw$progress$loglik.pen, col = 3)
legend("topright", legend = c("ted.nu", "ted.iw", "ed.iw"), col = c(1:3), pch = 1)
